name: x86-64-linux

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    strategy:
      matrix:
        include:
          - python: "3.12"
            py: "312"
#          - python: "3.10"
#            py: "310"
#          - python: "3.13"
#            py: "313"
    runs-on: arc-runner-set

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install Ubuntu packages
        run: |
          sudo apt-get update -y
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -yq \
            build-essential git cmake ninja-build automake libtool texinfo autoconf \
            libc++-dev libc++abi-dev ccache libboost-all-dev pkg-config wget gh \
            liblz4-dev libsodium-dev libmicrohttpd-dev librdkafka-dev

      - name: "Install Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Date Stamp
        shell: bash
        id: date-stamp
        run: |
          echo "timestamp=$(date -u "+%Y%m%d%H%M_%S")" >> "$GITHUB_OUTPUT"

      - name: Install clang-16
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 16 clang

      - name: Restore cache TON
        uses: actions/cache/restore@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-${{ runner.arch }}-${{ matrix.py }}-ubuntu-22.04-static-ccache

      - name: Build TON
        run: |
          git submodule sync --recursive
          git submodule update
          
          ./assembly/native/build-ubuntu-static.sh
          ccache -sp

      - run: |
          export KERNEL=linux
          echo "TARGET_SYSTEM=x86_64-$KERNEL" >> $GITHUB_ENV
          echo "RELEASE_NAME=ton-cpython-${{ matrix.py }}-x86_64-$KERNEL" >> $GITHUB_ENV

      - name: Save cache TON
        uses: actions/cache/save@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-${{ runner.arch }}-${{ matrix.py }}-ubuntu-22.04-static-ccache

      - name: Simple binary test
        run: cd artifacts; python3 -c 'import python_ton'

      - name: Linked libraries
        run: ldd ./artifacts/*.so

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.RELEASE_NAME }}
          path: artifacts

      - name: Create release
        run: |
          gh release delete -y "$RELEASE_NAME" || true
          gh release create --notes "Your binary sir" "$RELEASE_NAME" artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
