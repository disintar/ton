name: x86-64-linux

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Date Stamp
        shell: bash
        id: date-stamp
        run: |
          echo "timestamp=$(date -u "+%Y%m%d%H%M_%S")" >> "$GITHUB_OUTPUT"

      - name: Install system libraries
        run: |
          sudo apt update
          sudo apt install -y build-essential git cmake ninja-build automake libtool texinfo autoconf libc++-dev libc++abi-dev ccache libboost-all-dev pkg-config
          sudo apt remove libgsl-dev
          mkdir ~/.ccache 3pp

      - name: Install clang-16
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 16 clang

      - name: Cache 3pp
        id: cache-3pp
        uses: actions/cache@v4
        with:
          path: 3pp
          key: ${{ runner.os }}-${{ runner.arch }}-ubuntu-22.04-3pp-${{ hashFiles('**/assembly/native/build-ubuntu-appimages.sh') }}

      - name: Cache OpenSSL
        id: cache-openssl
        uses: actions/cache@v4
        with:
          path: openssl_3
          key: ${{ runner.os }}-${{ runner.arch }}-ubuntu-22.04-openssl_3-${{ hashFiles('**/assembly/native/build-ubuntu-appimages.sh') }}

      - name: Restore cache TON
        uses: actions/cache/restore@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-${{ runner.arch }}-ubuntu-22.04-portable-ccache

      - name: Build TON
        run: |
          git submodule sync --recursive
          git submodule update
          cp assembly/native/build-ubuntu-static.sh .
          chmod +x build-ubuntu-static.sh
          ./build-ubuntu-static.sh
          ccache -sp

      - name: Save cache TON
        uses: actions/cache/save@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-${{ runner.arch }}-ubuntu-22.04-portable-ccache-${{ steps.date-stamp.outputs.timestamp }}

      - name: Save/Restore cache TON libs
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-${{ runner.arch }}-ubuntu-22.04-portable-libs-ccache-${{ steps.date-stamp.outputs.timestamp }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-ubuntu-22.04-portable-libs-ccache

      - name: Build TON libs
        run: |
          cp assembly/native/build-ubuntu-portable-libs.sh .
          chmod +x build-ubuntu-portable-libs.sh
          ./build-ubuntu-portable-libs.sh -a -c
          cp ./artifacts/libtonlibjson.so appimages/artifacts/
          cp ./artifacts/libemulator.so appimages/artifacts/

      - name: Upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.RELEASE_NAME }}
          path: artifacts

      - name: Upload artifacts
        run:
          gh release delete -y "x86_64-linux" || true
          gh release create --notes "" "x86_64-linux" artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
