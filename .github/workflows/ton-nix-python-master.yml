name: "tvm-python master"

on:
  push:
    branches: [ master ]
  pull_request:
      branches: [ master ]
  workflow_dispatch:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        arch: [x86_64, aarch64]
        os: [Linux, macos-14]
        python: [39, 310, 311]
        exclude:
          - # covered by ton-x86_64-linux-python.yml
            os: Linux
            arch: x86_64
        include:
          - os: Linux
            nix-extra: |
              extra-platforms = x86_64-linux aarch64-linux
    runs-on: ${{ matrix.os }}

    steps:
    - name: Install QEMU
      uses: docker/setup-qemu-action@v2
      if: matrix.os == 'Linux' && matrix.arch == 'aarch64'

    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - uses: cachix/install-nix-action@v22
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          ${{ matrix.nix-extra }}
      env:
        USER: runner
          
    - uses: cachix/cachix-action@v12
      with:
        name: disintar
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      env:
        USER: runner
        
    - run: |
        export KERNEL=$(nix eval --raw 'nixpkgs#hostPlatform.parsed.kernel.name')
        echo "TARGET_SYSTEM=${{ matrix.arch }}-$KERNEL" >> $GITHUB_ENV
        echo "RELEASE_NAME=ton-cpython-${{ matrix.python }}-${{ matrix.arch }}-$KERNEL" >> $GITHUB_ENV

    - name: Compile
      run: nix build .?submodules=1#packages."$TARGET_SYSTEM".ton-python-${{ matrix.python }}
           --print-build-logs

    - name: Copy binaries
      run: |
        ls -lart 
        mkdir artifacts
        cp $PWD/result/lib/* artifacts/

    - name: Simple binaries test
      run: nix develop .#packages."$TARGET_SYSTEM".ton-python-${{ matrix.python }}
           -c bash -c "cd artifacts; python3 -c 'import python_ton'"

    - name: Upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: ${{ env.RELEASE_NAME }}
        path: artifacts

    - name: Upload artifacts
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }} ||
          ${{ github.event_name == 'workflow_dispatch' }}
      uses: workflow/nix-shell-action@v3.2.1
      with:
        flakes: nixpkgs#gh
        script: |
          gh release delete -y "$RELEASE_NAME" || true
          gh release create --notes "" "$RELEASE_NAME" artifacts/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
